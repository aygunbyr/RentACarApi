// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentACarApi.Data;

#nullable disable

namespace RentACarApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240922184807_AddModelYearsToCars")]
    partial class AddModelYearsToCars
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RentACarApi.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<double?>("DailyPrice")
                        .HasColumnType("float");

                    b.Property<int>("FuelId")
                        .HasColumnType("int");

                    b.Property<int?>("KiloMeter")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("ModelYear")
                        .HasColumnType("smallint");

                    b.Property<string>("Plate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransmissionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("FuelId");

                    b.HasIndex("TransmissionId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandName = "Mercedes Benz",
                            CarState = "Available",
                            ColorId = 1,
                            DailyPrice = 500.0,
                            FuelId = 3,
                            KiloMeter = 15000,
                            ModelName = "EQC",
                            ModelYear = (short)2016,
                            Plate = "34 AB 1456",
                            TransmissionId = 1
                        },
                        new
                        {
                            Id = 2,
                            BrandName = "Mercedes Benz",
                            CarState = "Available",
                            ColorId = 1,
                            DailyPrice = 1000.0,
                            FuelId = 3,
                            KiloMeter = 30000,
                            ModelName = "EQS",
                            ModelYear = (short)2018,
                            Plate = "34 BR 8482",
                            TransmissionId = 1
                        },
                        new
                        {
                            Id = 3,
                            BrandName = "Mercedes Benz",
                            CarState = "Available",
                            ColorId = 1,
                            DailyPrice = 1500.0,
                            FuelId = 3,
                            KiloMeter = 40000,
                            ModelName = "EQA",
                            ModelYear = (short)2019,
                            Plate = "34 MA 3341",
                            TransmissionId = 1
                        },
                        new
                        {
                            Id = 4,
                            BrandName = "Mercedes Benz",
                            CarState = "On Rent",
                            ColorId = 1,
                            DailyPrice = 1200.0,
                            FuelId = 3,
                            KiloMeter = 20000,
                            ModelName = "EQS SUV",
                            ModelYear = (short)2022,
                            Plate = "41 V 1756",
                            TransmissionId = 1
                        },
                        new
                        {
                            Id = 5,
                            BrandName = "Mercedes Benz",
                            CarState = "On Rent",
                            ColorId = 1,
                            DailyPrice = 800.0,
                            FuelId = 1,
                            KiloMeter = 22000,
                            ModelName = "CLA",
                            ModelYear = (short)2024,
                            Plate = "41 AB 8601",
                            TransmissionId = 2
                        },
                        new
                        {
                            Id = 6,
                            BrandName = "Mercedes Benz",
                            CarState = "Available",
                            ColorId = 1,
                            DailyPrice = 900.0,
                            FuelId = 1,
                            KiloMeter = 14000,
                            ModelName = "E-Class",
                            ModelYear = (short)2018,
                            Plate = "41 AN 2016",
                            TransmissionId = 2
                        },
                        new
                        {
                            Id = 7,
                            BrandName = "BMW",
                            CarState = "Available",
                            ColorId = 1,
                            DailyPrice = 750.0,
                            FuelId = 2,
                            KiloMeter = 55000,
                            ModelName = "X5",
                            ModelYear = (short)2019,
                            Plate = "16 DE 2856",
                            TransmissionId = 1
                        },
                        new
                        {
                            Id = 8,
                            BrandName = "BMW",
                            CarState = "Available",
                            ColorId = 1,
                            DailyPrice = 900.0,
                            FuelId = 2,
                            KiloMeter = 35000,
                            ModelName = "X7",
                            ModelYear = (short)2016,
                            Plate = "16 TU 2230",
                            TransmissionId = 1
                        },
                        new
                        {
                            Id = 9,
                            BrandName = "Audi",
                            CarState = "In Care",
                            ColorId = 1,
                            DailyPrice = 1300.0,
                            FuelId = 1,
                            KiloMeter = 60000,
                            ModelName = "A8",
                            ModelYear = (short)2018,
                            Plate = "35 MN 4546",
                            TransmissionId = 1
                        },
                        new
                        {
                            Id = 10,
                            BrandName = "Audi",
                            CarState = "In Care",
                            ColorId = 1,
                            DailyPrice = 1500.0,
                            FuelId = 1,
                            KiloMeter = 75000,
                            ModelName = "Q7",
                            ModelYear = (short)2020,
                            Plate = "35 YU 9402",
                            TransmissionId = 1
                        });
                });

            modelBuilder.Entity("RentACarApi.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Red"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Blue"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Green"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Black"
                        },
                        new
                        {
                            Id = 5,
                            Name = "White"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Gray"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Yellow"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Orange"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Purple"
                        });
                });

            modelBuilder.Entity("RentACarApi.Models.Fuel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fuels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gasoline"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Diesel"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Electricity"
                        });
                });

            modelBuilder.Entity("RentACarApi.Models.Transmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transmissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Automatic"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manual"
                        });
                });

            modelBuilder.Entity("RentACarApi.Models.Car", b =>
                {
                    b.HasOne("RentACarApi.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentACarApi.Models.Fuel", "Fuel")
                        .WithMany()
                        .HasForeignKey("FuelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentACarApi.Models.Transmission", "Transmission")
                        .WithMany()
                        .HasForeignKey("TransmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Fuel");

                    b.Navigation("Transmission");
                });
#pragma warning restore 612, 618
        }
    }
}
